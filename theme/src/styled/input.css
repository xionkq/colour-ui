@reference "tailwindcss";
/*TODO: Change the file import dir*/
@import '../utilities/index.css';

.input {
  --property-color-light: var(--default-bg-color);
  --property-color-dark: var(--default-bg-color);

  @apply h-8 w-60;
  @apply relative z-[1];
  @apply text-sm font-medium text-black;
  @apply rounded border border-solid border-transparent;
  @apply px-[11px];
  @apply property-transition;

  /*The double-layer background achieves a rounded gradient border*/
  background:
    linear-gradient(white, white) padding-box,
    linear-gradient(to right, var(--property-color-light), var(--property-color-dark)) border-box;

  &:not(:disabled, [disabled], .btn-disabled) {
    &:hover,
    &:focus-visible,
    &:active {
      --property-color-light: var(--default-bg-hover-color);
      --property-color-dark: var(--default-bg-hover-color);

      outline: unset;
    }

    &:focus,
    &:focus-visible {
      @apply c-shadow;
    }
  }

  & + .input {
    @apply ml-3;
  }

  /*&-info {*/
  &[class*='-info'] {
    /*--property-color-light: var(--info-color-light);*/
    /*--property-color-dark: var(--info-color-dark);*/

    &:not(:disabled, [disabled], .input-disabled) {
      &:hover,
      &:focus-visible,
      &:active {
        --property-color-light: var(--info-color-light);
        --property-color-dark: var(--info-color-dark);
      }
    }
  }

  /*&-success {*/
  &[class*='-success'] {
    /*--property-color-light: var(--success-color-light);*/
    /*--property-color-dark: var(--success-color-dark);*/

    &:not(:disabled, [disabled], .input-disabled) {
      &:hover,
      &:focus-visible,
      &:active {
        --property-color-light: var(--success-color-light);
        --property-color-dark: var(--success-color-dark);
      }
    }
  }

  /*&-warning {*/
  &[class*='-warning'] {
    /*--property-color-light: var(--warning-color-light);*/
    /*--property-color-dark: var(--warning-color-dark);*/

    &:not(:disabled, [disabled], .input-disabled) {
      &:hover,
      &:focus-visible,
      &:active {
        --property-color-light: var(--warning-color-light);
        --property-color-dark: var(--warning-color-dark);
      }
    }
  }

  /*&-error {*/
  &[class*='-error'] {
    /*--property-color-light: var(--error-color-light);*/
    /*--property-color-dark: var(--error-color-dark);*/

    &:not(:disabled, [disabled], .input-disabled) {
      &:hover,
      &:focus-visible,
      &:active {
        --property-color-light: var(--error-color-light);
        --property-color-dark: var(--error-color-dark);
      }
    }
  }
}

.input {
  /*&-lg {*/
  &[class*='-lg'] {
    @apply h-10;
    @apply px-[15px];
    @apply text-base;
  }

  /*&-sm {*/
  &[class*='-sm'] {
    @apply h-6;
    @apply px-[7px];
    @apply text-xs;
  }

  /*!*&-xs {*!*/
  /*&[class*="-xs"] {*/
  /*  @apply h-5;*/
  /*  @apply px-[7px];*/
  /*  @apply text-xs;*/
  /*}*/
}

.input {
  /*&-round {*/
  &[class*='-round'] {
    @apply rounded-full;
  }
}

.input {
  &[disabled],
  &:disabled,
  &.input-disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}
